<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/mvc
		    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		    http://www.springframework.org/schema/context
		    http://www.springframework.org/schema/context/spring-context.xsd">

    <mvc:annotation-driven/>

    <mvc:resources mapping="/static/**" location="/static/"/>
    <context:property-placeholder location="classpath*:/*.properties" />

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>


    <!--MappingJacksonHttpMessageConverter-->
    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>

    <!-- 整合solr -->
    <!--<bean id="httpSolrClient" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg name="builder" value="http://localhost:8089/solr/index.html#/ifgoif_sitecore"/>
    </bean>-->
    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <!--<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        &lt;!&ndash; 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 &ndash;&gt;
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    &lt;!&ndash; 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供&ndash;&gt;
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>

    &lt;!&ndash; Spring用于管理真正的ConnectionFactory的ConnectionFactory &ndash;&gt;
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        &lt;!&ndash; 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory &ndash;&gt;
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
    </bean>
    &lt;!&ndash;这个是队列目的地&ndash;&gt;
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>queue</value>
        </constructor-arg>
    </bean>
    &lt;!&ndash; 消息监听器 &ndash;&gt;
    <bean id="consumerMessageListener" class="com.ef.golf.listener.MyListener"/>
    &lt;!&ndash; 消息监听容器 &ndash;&gt;
    <bean id="jmsContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="queueDestination" />
        <property name="messageListener" ref="consumerMessageListener" />
    </bean>-->


    <!-- 方式二：使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法-->
    <!-- 定义目标bean和bean中的方法 -->
    <!--<bean id="SpringQtzJob" class="com.ef.golf.listener.QuartzTest"/>
    <bean id="SpringQtzJob2" class="com.ef.golf.listener.QuartzJob"/>-->
    <!--<bean id="SpringQtzJobMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="SpringQtzJob"/>
        </property>
        <property name="targetMethod">  &lt;!&ndash; 要执行的方法名称 &ndash;&gt;
            <value>execute</value>
        </property>
    </bean>-->

    <!-- 调度触发器 -->
   <!-- <bean id="CronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="SpringQtzJobMethod"></property>
        <property name="cronExpression" value="0/10 * * * * ?"></property>
    </bean>-->

    <!-- 调度工厂 -->
    <!--<bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="CronTriggerBean"/>
            </list>
        </property>
    </bean>-->
    <!--<task:annotation-driven/>
    &lt;!&ndash; 调度线程池的大小，调度线程在被调度任务完成前不会空闲  &ndash;&gt;
    <task:executor id="executor" pool-size="5" />
    &lt;!&ndash;指定执行线程池的初始大小、最大大小&ndash;&gt;
    <task:scheduler id="scheduler" pool-size="10" />-->
    <!--<bean id="deblocking" class="com.trading.golf.common.listener.CacheLister" />-->
</beans>
